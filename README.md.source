# PHP Library Test Environment with Docker

Beta. Final version will be released after:
- linux tests

**ETA for 1.0:** 2024-12-30

## Overview

This repository makes it easy to test PHP libraries across multiple PHP versions using Docker. It provides two modes:

1. **Full Testing Mode**: Builds a fresh environment for each PHP version, ensuring clean tests.
2. **Development Mode**: Uses volume mapping for faster testing during development, but requires rebuilding when switching PHP versions.

Both modes operate independently, meaning you can run tests for all PHP versions without switching the local environment.

## Features

- Test across multiple PHP versions.
- Local development version for ad hoc testing.
- Dynamically builds environments for each PHP version.
- Options to override base test commands and optimize caching mechanisms.

---

## Requirements

- **Docker**: Ensure Docker is installed and running on your system.

---

## Getting Started

### (Suggested) Quick way

Run the following command to set up the testing environment interactively:

```bash
export TARGET_DIR=php-multienv-library-tester \
    && curl -sSL https://raw.githubusercontent.com/choinek/php-multienv-library-tester/main/init.sh | bash \
    && cd "$TARGET_DIR" \
    && bash setup.sh
```

### Manual

#### Manual - Download

If you prefer, you can download the repository as a ZIP file:

1. Go to the [GitHub repository](https://github.com/choinek/php-multienv-library-tester).
2. Click "Code" > "Download ZIP".
3. Extract the ZIP file into your desired directory and follow the manual setup instructions in the repository.

The entire setup process is automated via the `setup.sh` script. Follow these steps:

#### Manual - Run setup

1. Execute the setup script:
   ```bash
   bash setup.sh
   ```

2. The script will:
    - Configure the environment.
    - Set up required files and directories.
    - Prompt you for necessary inputs such as PHP versions and repository details.
    - Allow you to set up specific PHP versions or modify them at any time in the future.

3. During setup, you can choose any PHP version you want to include in your testing environment.

4. Once completed, the environment is ready for testing.

---

## Modes

### Full Testing Mode

Builds a fresh environment for each PHP version, including `composer install` and other setup tasks. This ensures clean testing.

### Development Mode

Uses volume mapping to test locally. Faster but it's not as clean and requires rebuilding when switching PHP versions.

Both modes operate independently, so you can run tests for all PHP versions without switching the local environment.

---

## Commands Overview

### Full Testing

Run tests across all defined PHP versions:
```bash
make test-all
```

Optional parameters (provide as environment variables):
- `PARALLEL=false`: Disable parallel execution.
- `SKIP_LOGS=true`: Suppress log file generation.

Example:
```bash
PARALLEL=false make test-all
```

### Specific Version Testing

Run tests for a specific PHP version:
```bash
make test-version
```

Example:
```bash
make test-version
```

You will be prompted to enter the desired PHP version (e.g., 8.1).

### Development Mode

Run tests in a local development environment:
```bash
make test-dev
```

### Coverage Report

Generate a test coverage report:
```bash
make coverage
```

---

## Logs

Logs are stored in the `php-library-test-docker-output` directory. The directory is automatically created by the Makefile if it does not exist.

---

## Workflow Examples

1. **Set up environment**:
   ```bash
   bash setup.sh
   ```

2. **Run tests in development mode**:
   ```bash
   make test-dev
   ```

3. **Run tests across all PHP versions in parallel**:
   ```bash
   make test-all
   ```

4. **Disable parallel testing**:
   ```bash
   PARALLEL=false make test-all
   ```

5. **Run tests for PHP 8.2**:
   ```bash
   make test-version
   ```

6. **Suppress logs while testing in parallel**:
   ```bash
   SKIP_LOGS=true make test-all
   ```

---

## Contributing

Feel free to open issues or submit pull requests to improve this repository.
Currently, this project has been tested only on macOS. If you encounter any issues on other systems, please let me know.
I plan to test it on Linux after the holidays.

---


# License

This project is licensed under a dual-license system. The license terms depend on how the project is used:

## Using php-multienv-library-tester in your project

If you copy portions of this code into another project (e.g., as part of an independent library for testing purposes):
- The code is licensed under the **MIT License**.
- You may:
   - Use, modify, and redistribute the code freely.
   - Remove the "Buy Me a Beer" link from documentation, even remove documentation, but you must retain attribution in the source code.

### MIT License Terms
```text
MIT License

Copyright (c) [YEAR] [AUTHOR]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
```


## Forking this repository

If you fork this repository:
- The fork must adhere to the **[Attribution Assurance License (AAL)](https://opensource.org/licenses/AAL)**.
- Requirements:
   - Retain the original author attribution in the codebase.
   - Prominently include a "Buy Me a Beer" link for the original author in the README file or equivalent documentation.

### AAL License Terms
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
1. Redistributions of source code must retain the above copyright notice, this list of conditions, and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions, and the following disclaimer in the documentation and/or other materials provided with the distribution.
3. The name of the original author must not be used to endorse or promote products derived from this software without specific prior written permission.
4. A "Buy Me a Beer" link must be included prominently in the README file or equivalent documentation.

## Authors

- **Author**: Adrian Chojnicki
- **Support Development**: [Buy Me a Beer](https://beer.chojnicki.pl)
